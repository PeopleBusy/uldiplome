<?php

namespace AppBundle\Repository;

/**
 * EtudiantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtudiantRepository extends \Doctrine\ORM\EntityRepository
{
    public function checkIfEtudiantAlreadyExistsBis($nom, $prenom, $genre, $dateExamen, $option, $specialite, $mention){

        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->where($qb->expr()->andX(
                $qb->expr()->like('LOWER(e.nom)', '?1'),
                $qb->expr()->like('LOWER(e.prenom)', '?2'),
                $qb->expr()->like('LOWER(e.genre)', '?3'),
                $qb->expr()->like('LOWER(e.dateExamen)', '?4'),
                $qb->expr()->like('LOWER(e.optionEtud)', '?5'),
                $qb->expr()->like('LOWER(e.specialite)', '?6'),
                $qb->expr()->like('LOWER(e.mention)', '?7')
            ))


            ->setParameter('1', '%' . strtolower($nom) . '%')
            ->setParameter('2', '%' . strtolower($prenom) . '%')
            ->setParameter('3', '%' . strtolower($genre) . '%')
            ->setParameter('4', '%' . strtolower($dateExamen) . '%')
            ->setParameter('5', '%' . strtolower($option) . '%')
            ->setParameter('6', '%' . strtolower($specialite) . '%')
            ->setParameter('7', '%' . strtolower($mention) . '%');

        $query = $qb->getQuery();

        return $query->getResult();

    }


    public function checkIfEtudiantAlreadyExists($mention, $nom, $prenom, $datexamen, $specialite, $option){

        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->where('e.mention = :mention')
            ->andWhere('e.nom = :nom')
            ->andWhere('e.prenom = :prenom')
            ->andWhere('e.dateExamen = :datexamen')
            ->andWhere('e.optionEtud = :option')
            ->andWhere('e.specialite = :specialite')

            ->setParameter('mention', $mention)
            ->setParameter('nom', $nom)
            ->setParameter('prenom', $prenom)
            ->setParameter('datexamen', $datexamen)
            ->setParameter('option', $option)
            ->setParameter('specialite', $specialite);

        $query = $qb->getQuery();

        return $query->getResult();

    }
}
