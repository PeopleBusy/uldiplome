{% extends "::base.html.twig" %}


{% block title %} Impression {% endblock %}


{% block body %}

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-eye"></i> Impression</a></li>
            <li class="active">Aperçu</li>
        </ol>

        {% if success is defined  %}

            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="box box-success box-solid" style="margin-bottom: 0px;">
                        <div class="box-header with-border">
                            <h3 class="box-title">Succès</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                            <!-- /.box-tools -->
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            {{ success }}
                        </div>
                        <!-- /.box-body -->
                    </div>
                </div>
            </div>

        {% endif %}

    </section>


    <section class="content">


        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">
                    <i class="fa fa-eye"></i>
                   {{ libelle }}

                </h3>

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body" id="box-container">

                {% if demandes is empty  %}
                    <h3 style="text-align: center;">Aucun enregistrement trouvé</h3>
                {% else %}

                    <div class="col-md-12">
                        <button type="button" class="btn btn-success" id="btn_print" onclick="generate()">
                            <i class="fa fa-print"></i>
                            Imprimer
                        </button>
                    </div>

                    <div id="html-2-pdfwrapper" class="col-md-12">

                        {% for i in demandes %}
                            <h2>{{ i.id }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                            <h2>{{ i.etudiant.nom }}</h2>
                        {% endfor %}

                        <h1 style="margin-left: 850px;">Html2Pdf</h1>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>
                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>

                        <h2>Text Alignment</h2>
                        <div style='text-align: left'>left</div>
                        <div style='text-align: center'>center</div>
                        <div style='text-align: right'>right</div>

                        <h1 style='page-break-before: always; margin-top:100px;'>Page Two</h1>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>

                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>

                        <h1 style='page-break-before: always; margin-top:100px;'>Page Three</h1>
                        <h2>Text Alignment</h2>
                        <div style='text-align: left'>left</div>
                        <div style='text-align: center'>center</div>
                        <div style='text-align: right'>right</div>
                        <h2>Look here</h2>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                            This demo uses Html2Canvas.js to render HTML. Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>
                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>

                        <h2>Text Alignment</h2>
                        <div style='text-align: left'>left</div>
                        <div style='text-align: center'>center</div>
                        <div style='text-align: right'>right</div>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>
                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>

                        <h2>Text Alignment</h2>
                        <div style='text-align: left'>left</div>
                        <div style='text-align: center'>center</div>
                        <div style='text-align: right'>right</div>

                        <h1 style='page-break-before: always; margin-top:100px;'>Page Four</h1>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>

                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>

                        <h1 style='page-break-before: always; margin-top:100px;'>Page Five</h1>
                        <p>
                            This demo uses Html2Canvas.js to render HTML. <br />Instead of using an HTML canvas however, a canvas wrapper using jsPDF is substituted. The <em>context2d</em> provided by the wrapper calls native PDF rendering methods.
                        </p>

                        <p>A PDF of this page will be inserted into the right margin.</p>

                        <h2>Colors</h2>
                        <p>
                            <span style='color: red'>red</span> <span style='color: rgb(0, 255, 0)'>rgb(0,255,0)</span> <span style='color: rgba(0, 0, 0, .5)'>rgba(0,0,0,.5)</span> <span style='color: #0000FF'>#0000FF</span> <span style='color: #0FF'>#0FF</span>
                        </p>


                    </div>
                            <div class="hide">
                            {% for i in demandes %}
                                <tr class="">
                                    <td class="hide"><input type="checkbox"/></td>
                                    <td><span class="id badge bg-default">{{ i.id }}</span></td>
                                    <td><span class="nom">{{ i.etudiant.nom }}</span></td>
                                    <td><span class="prenom">{{ i.etudiant.prenom }}</span></td>
                                    <td><span class="genre">{{ i.etudiant.genre }}</span></td>
                                    <td><span class="dateExamen">{{ i.etudiant.dateExamen }}</span></td>
                                    <td><span class="option">{{ i.etudiant.optionEtud }}</span></td>
                                    <td><span class="specialite">{{ i.etudiant.specialite }}</span></td>
                                    <td><span class="mention">{{ i.etudiant.mention }}</span></td>
                                    <td><span class="mention">{{ i.typeDemande }}</span></td>
                                    <td><span class="mention">{{ i.etatDemande }}</span></td>

                                    <td class="center">
                                        <a href="#" class="btn btn-success btn-xs"><i class="fa fa-print"></i> Imprimer</a>
                                    </td>
                                </tr>
                            {% endfor %}

                            </div>

                {% endif %}


            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                {#Footer#}
            </div>
            <!-- /.box-footer-->
        </div>
    </section>

    <script>
        var base64Img = null;
        imgToBase64('octocat.jpg', function(base64) {
            base64Img = base64;
        });

        margins = {
            top: 30,
            bottom: 40,
            left: 30,
            width: 1500
        };

        generate = function()
        {
            var pdf = new jsPDF('l', 'pt', 'a4');
            pdf.setFontSize(18);
            pdf.fromHTML(document.getElementById('html-2-pdfwrapper'),
                margins.left, // x coord
                margins.top,
                {
                    // y coord
                    width: margins.width// max width of content on PDF
                },function(dispose) {
                    headerFooterFormatting(pdf, pdf.internal.getNumberOfPages());
                },
                margins);

            var iframe = document.createElement('iframe');
            iframe.setAttribute('style','position:absolute;right:0; top:0; bottom:0; height:100%; width:1500px; padding:20px;');
            var container = document.getElementById('box-container');
            container.appendChild(iframe);

            iframe.src = pdf.output('datauristring');
        };
        function headerFooterFormatting(doc, totalPages)
        {
            for(var i = totalPages; i >= 1; i--)
            {
                //doc.setPage(i);
                //header
                //header(doc);

                //footer(doc, i, totalPages);
                //doc.page++;
            }
        };

        function header(doc)
        {
            doc.setFontSize(30);
            doc.setTextColor(40);
            doc.setFontStyle('normal');

            if (base64Img) {
                doc.addImage(base64Img, 'JPEG', margins.left, 10, 40,40);
            }

            doc.text("Report Header Template", margins.left + 50, 40 );
            doc.setLineCap(2);
            doc.line(3, 70, margins.width + 43,70); // horizontal line
        };

        // You could either use a function similar to this or pre convert an image with for example http://dopiaza.org/tools/datauri
        // http://stackoverflow.com/questions/6150289/how-to-convert-image-into-base64-string-using-javascript
        function imgToBase64(url, callback, imgVariable) {

            if (!window.FileReader) {
                callback(null);
                return;
            }
            var xhr = new XMLHttpRequest();
            xhr.responseType = 'blob';
            xhr.onload = function() {
                var reader = new FileReader();
                reader.onloadend = function() {
                    imgVariable = reader.result.replace('text/xml', 'image/jpeg');
                    callback(imgVariable);
                };
                reader.readAsDataURL(xhr.response);
            };
            xhr.open('GET', url);
            xhr.send();
        };

        function footer(doc, pageNumber, totalPages){

            var str = "Page " + pageNumber + " of " + totalPages

            doc.setFontSize(10);
            doc.text(str, margins.left, doc.internal.pageSize.height - 20);

        };

    </script>

{% endblock %}